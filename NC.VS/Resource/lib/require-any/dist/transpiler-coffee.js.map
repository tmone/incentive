{"version":3,"names":[],"mappings":"","sources":["coffee.js"],"sourcesContent":["define('transpiler-coffee', ['any', 'coffee-script'], function (any, CoffeeScript) {\r\n\r\n\tvar Base64 = any.Base64;\r\n\r\n\tfunction compile(name, url, text) {\r\n\t\tvar ext = any.getFileExt(name);\r\n\t\tvar options = any.getExtOptions(ext);\r\n\t\toptions.literate = CoffeeScript.helpers.isLiterate(name);\r\n\t\toptions.sourceMap = true;\r\n\t\toptions.header = true;\r\n\t\t//options.inline = true;\r\n\t\toptions.bare = true; // 不要闭包包围\r\n\t\toptions.sourceFiles = [name + options.literate ? '' : '.coffee'];\r\n\t\toptions.generatedFile = name + options.literate ? '' : '.coffee';\r\n\r\n\t\tvar result = {\r\n\t\t\tjs   : null,\r\n\t\t\terror: null\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tresult = CoffeeScript.compile(text, options);\r\n\t\t\tresult.text = result.js;\r\n\t\t\tresult.text += '\\n//# sourceMappingURL=data:application/json;base64,' + Base64.encode(result.v3SourceMap || '') + '\\n//# sourceURL=' + url;\r\n\t\t} catch (err) {\r\n\t\t\tvar msg = err.message;\r\n\t\t\tvar loc = err.location;\r\n\t\t\terr.message = url;\r\n\r\n\t\t\tif (loc.first_line === loc.last_line) {\r\n\t\t\t\terr.message += ', line ' + (loc.first_line + 1);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\terr.message += ', lines ' + (loc.first_line + 1);\r\n\t\t\t\tif (isNaN(loc.last_line)) {\r\n\t\t\t\t\terr.message += '+';\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terr.message += '-' + (loc.last_line + 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\terr.message += ': ' + msg;\r\n\r\n\t\t\tresult.error = new SyntaxError(err.message, url, loc.first_line);\r\n\r\n\t\t\tif (any.isDebug)\r\n\t\t\t\tconsole.trace(result.error);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\treturn {\r\n\t\thandle: function (name, req, load, config) {\r\n\t\t\tvar date, dateInt, length = 0\r\n\t\t\t\t, ext = any.getFileExt(name)\r\n\t\t\t\t, url = req.toUrl(name)\r\n\t\t\t//>>debug<<\r\n\t\t\t\t, isDebug = any.isDebug\r\n\t\t\t\t, startDate = new Date()\r\n\t\t\t\t, debug = {src: 'cache', xhr: 0, handle: 0, lastModified: null, length: 0, url: url}\r\n\t\t\t\t;\r\n\r\n\t\t\tany.xhr(url, {\r\n\t\t\t\terror  : function (error) {\r\n\t\t\t\t\tload.error(error);\r\n\t\t\t\t},\r\n\t\t\t\theaders: function () {\r\n\t\t\t\t\tdate = new Date(this.getResponseHeader('Last-Modified'));\r\n\t\t\t\t\tdateInt = date.valueOf();\r\n\t\t\t\t\tlength = parseInt(this.getResponseHeader('Content-Length'));\r\n\t\t\t\t\t//>>debug<<\r\n\t\t\t\t\tvar tempDate = new Date();\r\n\t\t\t\t\tif (isDebug) {\r\n\t\t\t\t\t\tdebug.xhr = any.diffDate(startDate) + 'ms';\r\n\t\t\t\t\t\tdebug.length = length;\r\n\t\t\t\t\t\tdebug.lastModified = date;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar cache = any.cache.compare(name, dateInt, length);\r\n\t\t\t\t\tif (cache !== false) {\r\n\t\t\t\t\t\tthis.abort();\r\n\t\t\t\t\t\t//>>debug<<\r\n\t\t\t\t\t\tif (isDebug) {\r\n\t\t\t\t\t\t\tdebug.handle = any.diffDate(tempDate) + 'ms';\r\n\t\t\t\t\t\t\tdebug.code = cache.text;\r\n\t\t\t\t\t\t\tconsole.debug(name, debug);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tload.fromText(cache.text);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tdone   : function () {\r\n\t\t\t\t\t//>>debug<<\r\n\t\t\t\t\tvar tempDate = new Date();\r\n\t\t\t\t\tif (isDebug) {\r\n\t\t\t\t\t\tdebug.src = 'update';\r\n\t\t\t\t\t\tdebug.xhr = any.diffDate(startDate) + 'ms';\r\n\t\t\t\t\t\tdebug.raw = this.response;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar onCompile = function (result) {\r\n\t\t\t\t\t\t//>>debug<<\r\n\t\t\t\t\t\tif (isDebug) {\r\n\t\t\t\t\t\t\tdebug.handle = any.diffDate(tempDate) + 'ms';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (result.error != null) {\r\n\t\t\t\t\t\t\t//>>debug<<\r\n\t\t\t\t\t\t\tif (isDebug) {\r\n\t\t\t\t\t\t\t\tdebug.error = result.error;\r\n\t\t\t\t\t\t\t\tconsole.debug(name, debug);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tload.error(result.error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t//>>debug<<\r\n\t\t\t\t\t\t\tif (isDebug) {\r\n\t\t\t\t\t\t\t\tdebug.code = result.text;\r\n\t\t\t\t\t\t\t\tconsole.debug(name, debug);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tany.cache.set(name, {\r\n\t\t\t\t\t\t\t\tdate: dateInt,\r\n\t\t\t\t\t\t\t\tlength: length,\r\n\t\t\t\t\t\t\t\ttext: result.text\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tload.fromText(result.text);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (ext === 'cjsx') {\r\n\t\t\t\t\t\tvar xhr = this;\r\n\t\t\t\t\t\treq(['transpiler-coffee-react'], function (transform) {\r\n\t\t\t\t\t\t\tonCompile(compile(name, url, transform(xhr.response)));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tonCompile(compile(name, url, this.response));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n});\r\n"],"file":"coffee.js"}